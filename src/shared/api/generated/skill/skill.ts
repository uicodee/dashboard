/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 1.0.0
 */
import type {
  DeleteSkill,
  SkillInput,
  SkillOutput,
  UpdateSkill
} from '../../model'
import { createInstance } from '../../http/index';
import type { BodyType } from '../../http/index';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  export const getSkill = () => {
/**
 * Get all skills
 * @summary All Skills
 */
const allSkillsSkillGet = (
    
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<SkillOutput[]>(
      {url: `/skill/`, method: 'GET'
    },
      options);
    }
  /**
 * Update skill
 * @summary Update Skill
 */
const updateSkillSkillPut = (
    updateSkill: BodyType<UpdateSkill>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<SkillOutput>(
      {url: `/skill/`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateSkill
    },
      options);
    }
  /**
 * Create new skill
 * @summary Create Skill
 */
const createSkillSkillPost = (
    skillInput: BodyType<SkillInput>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<SkillOutput>(
      {url: `/skill/`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: skillInput
    },
      options);
    }
  /**
 * Delete skill
 * @summary Delete Skill
 */
const deleteSkillSkillDelete = (
    deleteSkill: BodyType<DeleteSkill>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<unknown>(
      {url: `/skill/`, method: 'DELETE',
      headers: {'Content-Type': 'application/json', },
      data: deleteSkill
    },
      options);
    }
  return {allSkillsSkillGet,updateSkillSkillPut,createSkillSkillPost,deleteSkillSkillDelete}};
export type AllSkillsSkillGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSkill>['allSkillsSkillGet']>>>
export type UpdateSkillSkillPutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSkill>['updateSkillSkillPut']>>>
export type CreateSkillSkillPostResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSkill>['createSkillSkillPost']>>>
export type DeleteSkillSkillDeleteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getSkill>['deleteSkillSkillDelete']>>>
