/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 1.0.0
 */
import type {
  EmployeeCardNumber,
  EmployeeInput,
  EmployeeLanguage,
  EmployeeOutput,
  EmployeeSkill,
  OrderOutput
} from '../../model'
import { createInstance } from '../../http/index';
import type { BodyType } from '../../http/index';


type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  export const getEmployee = () => {
/**
 * Register new employee
 * @summary Register Employee
 */
const registerEmployeeEmployeeRegisterPost = (
    employeeInput: BodyType<EmployeeInput>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<EmployeeOutput>(
      {url: `/employee/register`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: employeeInput
    },
      options);
    }
  /**
 * Get all orders
 * @summary All Orders
 */
const allOrdersEmployeeOrderAllGet = (
    
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<OrderOutput[]>(
      {url: `/employee/order/all`, method: 'GET'
    },
      options);
    }
  /**
 * Get all employees
 * @summary Get Employees
 */
const getEmployeesEmployeeAllGet = (
    
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<EmployeeOutput[]>(
      {url: `/employee/all`, method: 'GET'
    },
      options);
    }
  /**
 * Get employee
 * @summary Get Employee
 */
const getEmployeeEmployeeEmployeeIdGet = (
    employeeId: number,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<EmployeeOutput>(
      {url: `/employee/${employeeId}`, method: 'GET'
    },
      options);
    }
  /**
 * Get my info
 * @summary Get Me
 */
const getMeEmployeeMeGet = (
    
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<EmployeeOutput>(
      {url: `/employee/me`, method: 'GET'
    },
      options);
    }
  /**
 * Update skill
 * @summary Update Skill
 */
const updateSkillEmployeeSkillPut = (
    employeeSkill: BodyType<EmployeeSkill>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<EmployeeOutput>(
      {url: `/employee/skill`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: employeeSkill
    },
      options);
    }
  /**
 * Update language
 * @summary Update Language
 */
const updateLanguageEmployeeLanguagePut = (
    employeeLanguage: BodyType<EmployeeLanguage>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<unknown>(
      {url: `/employee/language`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: employeeLanguage
    },
      options);
    }
  /**
 * Update card number
 * @summary Update Card Number
 */
const updateCardNumberEmployeeCardNumberPut = (
    employeeCardNumber: BodyType<EmployeeCardNumber>,
 options?: SecondParameter<typeof createInstance>,) => {
      return createInstance<unknown>(
      {url: `/employee/card-number`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: employeeCardNumber
    },
      options);
    }
  return {registerEmployeeEmployeeRegisterPost,allOrdersEmployeeOrderAllGet,getEmployeesEmployeeAllGet,getEmployeeEmployeeEmployeeIdGet,getMeEmployeeMeGet,updateSkillEmployeeSkillPut,updateLanguageEmployeeLanguagePut,updateCardNumberEmployeeCardNumberPut}};
export type RegisterEmployeeEmployeeRegisterPostResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['registerEmployeeEmployeeRegisterPost']>>>
export type AllOrdersEmployeeOrderAllGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['allOrdersEmployeeOrderAllGet']>>>
export type GetEmployeesEmployeeAllGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['getEmployeesEmployeeAllGet']>>>
export type GetEmployeeEmployeeEmployeeIdGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['getEmployeeEmployeeEmployeeIdGet']>>>
export type GetMeEmployeeMeGetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['getMeEmployeeMeGet']>>>
export type UpdateSkillEmployeeSkillPutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['updateSkillEmployeeSkillPut']>>>
export type UpdateLanguageEmployeeLanguagePutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['updateLanguageEmployeeLanguagePut']>>>
export type UpdateCardNumberEmployeeCardNumberPutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getEmployee>['updateCardNumberEmployeeCardNumberPut']>>>
